name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test -- --passWithNoTests

    - name: Build
      run: npm run build

    - name: Upload frontend build
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend/build/

  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        profile: minimal
        toolchain: stable
        targets: x86_64-unknown-linux-gnu,armv7-unknown-linux-gnueabihf,aarch64-unknown-linux-gnu

    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          backend/target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build amd64
      run: cargo build --release --target x86_64-unknown-linux-gnu

    - name: Build armv7
      run: cargo build --release --target armv7-unknown-linux-gnueabihf

    - name: Build arm64
      run: cargo build --release --target aarch64-unknown-linux-gnu

    - name: Prepare binaries for Docker
      run: |
        mkdir -p backend/target/amd64 backend/target/arm/v7 backend/target/arm64
        cp target/x86_64-unknown-linux-gnu/release/ha-advanced-automation backend/target/amd64/
        cp target/armv7-unknown-linux-gnueabihf/release/ha-advanced-automation backend/target/arm/v7/
        cp target/aarch64-unknown-linux-gnu/release/ha-advanced-automation backend/target/arm64/

    - name: Upload binaries
      uses: actions/upload-artifact@v4
      with:
        name: backend-binaries
        path: backend/target/

  docker:
    needs: [frontend, backend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: Download frontend build
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend/build

      - name: Download backend binaries
        uses: actions/download-artifact@v4
        with:
          name: backend-binaries
          path: backend/target

      - name: Build Docker image
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: false
          tags: local/ha-advanced-automation:test
