name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  packages: write

jobs:
  backend-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, armv7, arm64]
        include:
          - arch: amd64
            target: x86_64-unknown-linux-gnu
          - arch: armv7
            target: armv7-unknown-linux-gnueabihf
          - arch: arm64
            target: aarch64-unknown-linux-gnu
    defaults:
      run:
        working-directory: backend

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          profile: minimal
          toolchain: stable
          targets: ${{ matrix.target }}

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            backend/target/
          key: ${{ runner.os }}-cargo-${{ matrix.arch }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Install cross
        run: cargo install cross

      - name: Build ${{ matrix.arch }}
        run: cross build --release --target ${{ matrix.target }}

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.arch }}
          path: backend/target/${{ matrix.target }}/release/ha-advanced-automation

  prepare-docker:
    needs: [backend-build]
    runs-on: ubuntu-latest
    steps:
      - name: Create directory structure
        run: |
          mkdir -p backend/target/amd64 backend/target/arm/v7 backend/target/arm64

      - name: Download amd64 binary
        uses: actions/download-artifact@v4
        with:
          name: binary-amd64
          path: backend/target/amd64

      - name: Download armv7 binary
        uses: actions/download-artifact@v4
        with:
          name: binary-armv7
          path: backend/target/arm/v7

      - name: Download arm64 binary
        uses: actions/download-artifact@v4
        with:
          name: binary-arm64
          path: backend/target/arm64

      - name: Upload prepared artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-binaries
          path: backend/target/

  docker:
    needs: [prepare-docker]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: Download backend binaries
        uses: actions/download-artifact@v4
        with:
          name: backend-binaries
          path: backend/target

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          tags: ghcr.io/${{ github.repository }}:latest
